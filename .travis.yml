dist: trusty

sudo: false
language: android

env:
  global:
    - JAVA_HOME=/usr/lib/jvm/java-8-oracle
    - LANG=pt_BR.UTF-8
    - CHROME_BIN=google-chrome
    - VERSION-BUILD-TOOLS=27.0.3
    - VERSION-ANDROID=27
    - S3_URL=https://s3-sa-east-1.amazonaws.com/ionic-travis

branches:
  only:
    - master
    - prod

notifications:
  email:
    on_success: never
    on_failure: change

stages:
  - Configuration
  - Tests
  - Build
  - Package
  - Deploy
  - Code Analisys
  - Release

fast_finish: true

install:
  - nvm install 11
  - npm install

cache:
  - npm: true
  - yarn: true
  - cocoapods: true
  - directories:
      - $HOME/.gradle/caches/
      - $HOME/.gradle/wrapper/
      - $HOME/.sonar/cache
      - node_modules

android_configuration: &android_configuration
  android:
    components:
      - build-tools-28.0.3
      - android-28
    licenses:
      - android-sdk-preview-.+
      - android-sdk-license-.+
      - google-gdk-license-.+
  jdk: oraclejdk8

s3: &s3
  before_install:
    - pip install --user awscli
    - mkdir -p ~/shared
    - aws s3 sync s3://ionic-travis/build/$TRAVIS_BUILD_NUMBER ~/shared --acl "public-read"
  after_success:
    - aws s3 sync ~/shared s3://ionic-travis/build/$TRAVIS_BUILD_NUMBER --acl "public-read"

deploy_s3: &deploy_s3
  deploy:
    provider: s3
    bucket: ionic-travis
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    acl: public_read
    local_dir: $S3_LOCAL_DIR
    upload-dir: $S3_UPLOAD_DIR

test: &test
  stage: 'Tests'
  addons:
    apt:
      sources:
        - deadsnakes
        - sourceline: deb http://dl.google.com/linux/chrome/deb/ stable main
          key_url: https://dl-ssl.google.com/linux/linux_signing_key.pub
      packages:
        - google-chrome-stable
        - python3.6
      update: true
  <<: *s3

jobs:
  include:
  
    - <<: *test
      name: 'Get Version'
      stage: 'Configuration'
      script:
        - ./travis/config/version.sh


    - name: 'Lint'
      stage: 'Tests'
      script:
        - npm run lint


    - <<: *test
      name: 'Unit Tests'
      script:
        - npm run unit-ci
        - cp coverage/lcov.info ~/shared/lcov.info


    - <<: *test
      name: 'e2e Tests'
      script:
        - npm run e2e-ci
      before_install: skip
      after_success: skip


    - name: 'Build Web'
      stage: 'Build'
      script:
        - ./travis/web/install.sh
      before_deploy:
        - export S3_LOCAL_DIR=build-web
        - export S3_UPLOAD_DIR=build/$TRAVIS_BUILD_NUMBER
      <<: *deploy_s3


    - name: 'Build Android'
      stage: 'Build'
      <<: *android_configuration
      addons:
        apt:
          sources:
            - sourceline: deb https://dl.yarnpkg.com/debian/ stable main
              key_url: https://dl.yarnpkg.com/debian/pubkey.gpg
          packages:
            - gradle
            - jq
      script:
        - npm rebuild node-sass
        - npm i -g ionic cordova
        - ionic cordova build android --prod --release
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -f  $HOME/.gradle/caches/transforms-1/transforms-1.lock
        - rm -rf $HOME/.gradle/caches/3.5/fileHashes/
        - rm -rf $HOME/.gradle/caches/*/plugin-resolution/
      before_deploy:
        - export S3_LOCAL_DIR=platforms/android/app/build/outputs/apk/release
        - export S3_UPLOAD_DIR=build/$TRAVIS_BUILD_NUMBER
      <<: *deploy_s3


    - name: 'Build IOS'
      stage: 'Build'
      os: osx
      language: objective-c
      osx_image: xcode10
      install:
        - ./travis/osx/install.sh
      script:
        - ionic cordova build ios --prod --release
      before_deploy:
        - ./travis/osx/before_deploy.sh
        - export S3_LOCAL_DIR=s3-cache
        - export S3_UPLOAD_DIR=osx-cache
      <<: *deploy_s3


    - name: 'Package Android'
      stage: 'Package'
      <<: *android_configuration
      install: skip
      script:
        - ./travis/sign.sh
      before_deploy:
        - export S3_LOCAL_DIR=build
        - export S3_UPLOAD_DIR=build/$TRAVIS_BUILD_NUMBER
      <<: *deploy_s3

    - name: 'Package IOS'
      stage: 'Package'
      os: osx
      language: objective-c
      install: true
      script:
        - echo "Package IOS"

    - stage: 'Deploy'
      name: 'Deploy Github Pages'
      install: skip
      if: type != pull_request
      script: skip
      before_deploy:
        - curl -O ${S3_URL}/build/${TRAVIS_BUILD_NUMBER}/www.tar.gz
        - tar xvfz www.tar.gz -C ./
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GITHUB_TOKEN
        keep-history: true
        local-dir: www
        on:
          all_branches: true

    - stage: 'Deploy'
      name: 'Deploy Releases'
      install: skip
      if: type != pull_request
      script:
        - export URL=${S3_URL}/build/${TRAVIS_BUILD_NUMBER}
        - curl -O ${URL}/snapshot
        - curl -O ${URL}/version
        - export SNAPSHOT=$(cat snapshot)
        - export VERSION=$(cat version)
      before_deploy:
        - ./travis/before_deploy.sh
      deploy:
        provider: releases
        api_key:
          secure: '$GITHUB_TOKEN'
        file_glob: true
        file: ionictravis-${VERSION}.apk
        prerelease: '$SNAPSHOT'
        overwrite: '$SNAPSHOT'
        name: 'v${VERSION}'
        skip_cleanup: true
        on:
          repo: '$TRAVIS_REPO_SLUG'
          all_branches: true
          tags: false

    - stage: 'Release'
      install: skip
      script:
        - ./travis/release.sh
      if: branch = prod

    - name: 'Sonar'
      stage: 'Code Analisys'
      addons:
        sonarcloud:
          organization: 'brunodutr-github'
          token:
            secure: $SONAR_TOKEN
        apt:
          sources:
            - deadsnakes
          packages:
            - python3.6
      <<: *s3
      after_success:
        - aws s3 rm --recursive s3://ionic-travis/build
      script:
        - ./travis/sonar.sh
